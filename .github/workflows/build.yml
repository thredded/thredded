name: CI

on:
  push:
    branches:
    - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: thredded_gem_test
          POSTGRES_USER: thredded
          POSTGRES_PASSWORD: thredded

      mysql2:
        image: mysql:8.0
        env:
          MYSQL_ROOT_HOST: "%"
          MYSQL_DATABASE: thredded_gem_test
          MYSQL_USER: thredded
          MYSQL_PASSWORD: thredded
          MYSQL_ROOT_PASSWORD: thredded
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - "3306:3306"

    strategy:
      fail-fast: false
      matrix:
        node: ["14"]
        rails_version: ["7.0", "7.1", "7.2", "8.0"]
        db: [sqlite3, postgresql, mysql2]
        include:
          # one ruby per rails - to cut down noise, we can add variety if there's a reason
          - rails_version: 7.0
            ruby: 3.1
          - rails_version: 7.1
            ruby: 3.2
          - rails_version: 7.2
            ruby: 3.2
          - rails_version: 8.0
            ruby: 3.3

    env:
      RAILS_ENV: test
      COVERAGE: 1
      FERRUM_DEFAULT_TIMEOUT: 20
      BUNDLE_GEMFILE: "spec/gemfiles/rails_${{ matrix.rails_version }}.gemfile"
      DB: ${{ matrix.db }}
      DB_HOST: 127.0.0.1
      DB_POOL: 5
      DB_USERNAME: thredded
      DB_PASSWORD: thredded

    steps:
    - uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # install gems and cache

    - uses: browser-actions/setup-chrome@v1

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}

    - name: Install Node Packages via Yarn
      run: |
        cd spec/dummy && yarn && cd -

    - name: Restore Onebox Data and Views Cache
      uses: actions/cache/restore@v4
      id: restore-onebox-data-and-views
      with:
        path: |
          tmp/cache/onebox-data
          tmp/cache/onebox-views
          spec/dummy/tmp/cache/onebox-data
          spec/dummy/tmp/cache/onebox-views
        key: onebox-data-and-views

    - name: "Run Tests: test:nojs"
      run: |
        SIMPLECOV_NAME="test:nojs" bundle exec rspec --force-color --format d --tag=~js --tag=~i18n_tasks

    - name: "Run Tests: test:js"
      run: |
        SIMPLECOV_NAME="test:js" bundle exec rspec --force-color --format d --tag=js

    - name: "Run Tests: spec/migrations"
      run: |
        MIGRATION_SPEC=1 SIMPLECOV_NAME="test:migrations" bundle exec rspec spec/migration --force-color --format d

    - name: "Run Tests: spec/configuration/run_all"
      run: |
        spec/configuration/run_all

    - name: "Run Tests: run_spec_repeatedly"
      run: |
        bin/run_specs_repeatedly --tag=threaded_render

    - name: Upload capybara screenshots as artifacts after failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: capybara-rails${{ matrix.rails_version }}-ruby${{ matrix.ruby }}-${{ matrix.db }}
        path: /home/runner/work/thredded/thredded/spec/dummy/tmp/capybara/
        retention-days: 7

    # - name: Test & publish code coverage
    #   uses: paambaati/codeclimate-action@v8.0.0
    #   env:
    #     CC_TEST_REPORTER_ID: <code_climate_reporter_id>

    - name: Cache Onebox Data and Views Cache
      uses: actions/cache/save@v4
      id: cache-onebox-data-and-views
      with:
        path: |
          tmp/cache/onebox-data
          tmp/cache/onebox-views
          spec/dummy/tmp/cache/onebox-data
          spec/dummy/tmp/cache/onebox-views
        key: ${{ steps.restore-onebox-data-and-views.outputs.cache-primary-key }}

  rubocop:
    runs-on: ubuntu-latest

    env:
      BUNDLE_GEMFILE: spec/gemfiles/rubocop.gemfile

    steps:
    - uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
        bundler-cache: true

    - name: Rubocop
      run: |
        bundle exec rubocop

  i18n-tasks:
    runs-on: ubuntu-latest

    env:
      BUNDLE_GEMFILE: spec/gemfiles/i18n-tasks.gemfile

    steps:
    - uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
        bundler-cache: true

    - name: i18n health
      run: |
        bundle exec i18n-tasks health
